////
The format of this document is `asciidoc`, and it will be compiled with:

   $ asciidoctor task-description.ascii

This generates the HTML which will be included on the website.
////
= Euler 191

****
Euler problem 191: https://projecteuler.net/problem=191[].
****

// //////////////////////////////////////////////////////////////
== Go

.Task
****
Assume there is one command-line argument, that represents $n$ as the number of days 

A particular school offers cash rewards to children with good attendance and punctuality. If they are absent for three consecutive days or late on more than one occasion, they forfeit their prize.

During an $n-day$ period, a trinary string is formed for each child consisting of `L's (late), O's (on time), and A's (absent)`.

For example, there are eighty-one trinary strings for a 4-day period that can be formed, but there are exactly forty-three strings that would lead to a prize:

OOOO OOOA OOOL OOAO OOAA OOAL OOLO OOLA OAOO OAOA
OAOL OAAO OAAL OALO OALA OLOO OLOA OLAO OLAA AOOO
AOOA AOOL AOAO AOAA AOAL AOLO AOLA AAOO AAOA AAOL
AALO AALA ALOO ALOA ALAO ALAA LOOO LOOA LOAO LOAA
LAOO LAOA LAAO


Write a Go script named `euler-191-prize-strings.go` to calculate how many `"prize"` strings exist over a $n-day$ period.

Upload your solution to https://euler.computing.dcu.ie/einstein/[_Einstein_].
****

.Example invocation
----
$ go run euler-191-prize-strings.go 4
----

.Example standard output
----
43
----

.Explanation
****
The total number of trinary strings that lead to a prize over a 4-day period is $43$.
****
